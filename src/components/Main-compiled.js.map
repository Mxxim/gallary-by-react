{"version":3,"sources":["Main.js"],"names":[],"mappings":"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","file":"Main-compiled.js","sourcesContent":["require('normalize.css/normalize.css');\nrequire('styles/App.scss');\n\nimport React from 'react';\nimport ReactDOM from 'react-dom'\n\n// 获取图片相关的数据\nlet imagesDatas = require('../data/imagesDatas.json');\n\n// 利用自执行函数，将图片名信息转换成图片url路径信息\nlet imagesURLs = ((imagesDatasArr) => {\n\n    for (let i = 0, j = imagesDatasArr.length; i < j; i++) {\n      var singleImageData = imagesDatasArr[i]\n      singleImageData.imageURL = require('../images/' + singleImageData.fileName);\n      imagesDatasArr[i] = singleImageData;\n    }\n\n    return imagesDatasArr;\n})(imagesDatas);\n\nlet getRangeRandom = (low, high) => {\n  return Math.ceil(Math.random() * (high - low) + low)\n};\n\n// 获取 0 ～ 30度 之间的一个任意正负数\nlet get30DegRandom = () => {\n  return (Math.random() > 0.5? '' : '-') + Math.ceil(Math.random() * 30)\n};\n\nclass ImgFigure extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handlerClick = this.handlerClick.bind(this)\n  }\n\n  handlerClick(event) {\n\n    if (this.props.arrange.isCenter) {\n      this.props.inverse();\n    } else {\n      this.props.center();\n    }\n\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  render() {\n\n    let stylObj = {};\n\n    // 如果props属性中指定了这张图片的位置，则使用\n    if (this.props.arrange.pos) {\n      stylObj = this.props.arrange.pos;\n    }\n\n    // 如果图片的旋转角度有值并且不为0，添加旋转角度\n    if (this.props.arrange.rotate) {\n      let types = ['MozTransform', 'msTransform', 'WebkitTransform', 'transform'];\n      for (let i in types) {\n        stylObj[types[i]] = 'rotate(' + this.props.arrange.rotate + 'deg)';\n      }\n\n    }\n\n    if (this.props.arrange.isCenter) {\n      stylObj.zIndex = 11;\n    }\n\n    let imgFigureClassName = 'img-figure';\n    imgFigureClassName += this.props.arrange.isInverse ? ' is-inverse' : '';\n\n\n    return (\n      <figure className={imgFigureClassName} style={stylObj} onClick={this.handlerClick}>\n        <div className=\"img-div\">\n          <img src={this.props.data.imageURL}\n              alt={this.props.data.title}/>\n        </div>\n        <figcaption>\n          <h2 className=\"img-title\">{this.props.data.title}</h2>\n          <div className=\"img-back\" onClick={this.handlerClick}>\n            <p>\n              {this.props.data.desc}\n            </p>\n          </div>\n        </figcaption>\n      </figure>\n    )\n  }\n}\n\nclass ControllerUnit extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n\n\n    if (this.props.arrange.isCenter) {\n      this.props.inverse();\n    } else {\n      this.props.center();\n    }\n\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  render() {\n\n    let controllerUnitClassName = \"controller-unit\";\n\n    // 如果对应的是居中的图片，显示控制按钮的居中态\n    if (this.props.arrange.isCenter) {\n      controllerUnitClassName += \" is-center\";\n\n      if (this.props.arrange.isInverse) {\n        controllerUnitClassName += \" is-inverse\";\n      }\n\n    }\n\n    return <span className={controllerUnitClassName} onClick={this.handleClick} />\n\n  }\n}\n\nclass AppComponent extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this.centerPos = {\n      left: 0,\n      top: 0\n    };\n\n    // 水平方向的取值范围\n    this.hPosRange = {\n      leftSecX: [0, 0],\n      rightSecX: [0, 0],\n      y: [0,0]\n    };\n\n    // 垂直方向的q取值范围\n    this.vPosRange = {\n      x: [0, 0],\n      topY: [0, 0]\n    }\n\n    this.state = {\n      imgsArrangeArr: [\n        // {\n        //   pos: {\n        //     left : '0',\n        //     top: '0'\n        //   },\n        //  rotate: 0 // 旋转角度\n        //  isInverse: false  // 图片正反面，true为反面，false为正面\n        //  isCenter: false   // 图片是否居中\n        // }\n      ]\n    }\n  }\n\n  // 组件加载以后，为每张图片计算其位置\n  componentDidMount(){\n\n    // 拿到舞台的大小\n    // var stageDOM = ReactDOM.findDOMNode(this.refs.stage),\n    var stageDOM = this.stage,\n      stageW = stageDOM.scrollWidth,\n      stageH = stageDOM.scrollHeight,\n      stageHalfW = Math.ceil(stageW / 2),\n      stageHalfH = Math.ceil(stageH / 2);\n\n    // 拿到一个imgFigure的大小\n    var imgFigureDOM = ReactDOM.findDOMNode(this.refs.imgFigure0),\n        imgFigureW = imgFigureDOM.scrollWidth,\n        imgFigureH = imgFigureDOM.scrollHeight,\n        imgFigureHalfW = Math.ceil(imgFigureW / 2),\n        imgFigureHalfH = Math.ceil(imgFigureH / 2);\n\n    // 计算中心图片的位置\n    this.centerPos.left = stageHalfW - imgFigureHalfW;\n    this.centerPos.top = stageHalfH - imgFigureHalfH;\n\n    // 计算左侧、右侧区域图片排布位置的取值范围\n    // 以舞台中心为准，舞台左边：计算水平左侧取值范围\n    this.hPosRange.leftSecX[0] = -imgFigureHalfW;\n    this.hPosRange.leftSecX[1] = stageHalfW - imgFigureHalfW * 3;\n\n    // 以舞台中心为准，舞台右边：计算水平右侧取值范围\n    this.hPosRange.rightSecX[0] = stageHalfW + imgFigureHalfW;\n    this.hPosRange.rightSecX[1] = stageW - imgFigureHalfW;\n\n    this.hPosRange.y[0] = -imgFigureHalfH;\n    this.hPosRange.y[1] = stageH - imgFigureHalfH;\n\n    // 计算上侧区域图片排布位置的取值范围\n    // this.vPosRange.x[0] = stageHalfW - imgFigureHalfW;\n    this.vPosRange.x[0] = stageHalfW - imgFigureW;\n    this.vPosRange.x[1] = stageHalfW;\n    this.vPosRange.topY[0] = -imgFigureHalfH;\n    this.vPosRange.topY[1] = stageHalfH - imgFigureHalfH * 3;\n\n    this.rearrange(0);\n  }\n\n  /**\n   * 翻转图片\n   * @param index 输入当前被执行inverse操作的图片对应的图片信息数组的index值\n   * @return {Function} 这是一个闭包函数\n   */\n  inverse(index) {\n    return () => {\n      let imgsArrangeArr = this.state.imgsArrangeArr;\n      imgsArrangeArr[index].isInverse = !imgsArrangeArr[index].isInverse;\n\n      this.setState({\n        imgsArrangeArr: imgsArrangeArr\n      });\n    }\n  }\n\n  /**\n   * 重新布局所有图片\n   * @param centerIndex 指定居中图片是哪一张\n   */\n  rearrange(centerIndex) {\n\n    let imgsArrangeArr = this.state.imgsArrangeArr,\n      centerPos = this.centerPos,\n      hPosRangeY = this.hPosRange.y,\n      hPosRangeLeftSecX = this.hPosRange.leftSecX,\n      hPosRangeRightSecX = this.hPosRange.rightSecX,\n      vPosRangeX = this.vPosRange.x,\n      vPosRangeTopY = this.vPosRange.topY,\n      imgsArrangeTopArr = [],\n      imgsArrangeCenterArr = [];\n\n    // 布局居中 centerIndex 的图片\n    imgsArrangeCenterArr = imgsArrangeArr.splice(centerIndex, 1);\n    imgsArrangeCenterArr[0] = {\n      pos: centerPos,\n      rotate: 0,  // 居中的 centerIndex 图片不需要旋转\n      isCenter: true\n    }\n\n    // 取出要布局上侧图片的状态信息\n    // 标记上侧区域的图片是从数组的哪个位置拿出来的\n    let topImgNum = Math.floor(Math.random() * 2); // 随机数0或者1，取一张获取不取\n    let topImgSpliceIndex = Math.ceil(Math.random() * (imgsArrangeArr.length - topImgNum));\n    imgsArrangeTopArr = imgsArrangeArr.splice(topImgSpliceIndex, topImgNum);\n\n    // 布局位于上侧的图片\n    imgsArrangeTopArr.forEach((img, index) => {\n      imgsArrangeTopArr[index] = {\n        pos: {\n          left: getRangeRandom(vPosRangeX[0], vPosRangeX[1]),\n          top: getRangeRandom(vPosRangeTopY[0], vPosRangeTopY[1])\n        },\n        rotate: get30DegRandom(),\n        isCenter: false\n      }\n    });\n\n    // 布局位于左侧、右侧的图片\n    let hPosRangeLeftOrRight = null;\n    for (let i = 0, j = imgsArrangeArr.length, k = j / 2; i < j; i++) {\n\n      if (i < k) {\n        hPosRangeLeftOrRight = hPosRangeLeftSecX\n      } else {\n        hPosRangeLeftOrRight = hPosRangeRightSecX\n      }\n\n      imgsArrangeArr[i] = {\n        pos: {\n          left: getRangeRandom(hPosRangeLeftOrRight[0], hPosRangeLeftOrRight[1]),\n          top: getRangeRandom(hPosRangeY[0], hPosRangeY[1])\n        },\n        rotate: get30DegRandom(),\n        isCenter: false\n      }\n\n    }\n\n    // 将上侧、中心图片放回数组取\n    if (imgsArrangeTopArr && imgsArrangeTopArr[0]) {\n      imgsArrangeArr.splice(topImgSpliceIndex, 0, imgsArrangeTopArr[0])\n    }\n\n    imgsArrangeArr.splice(centerIndex, 0, imgsArrangeCenterArr[0]);\n\n    // update and render\n    this.setState({\n      imgsArrangeArr: imgsArrangeArr\n    });\n\n  }\n\n  /**\n   * 利用rearrange函数，居中对应index的图片\n   * @param index，需要被居中的图片对应的图片信息数组的index值\n   * @return {Function}\n   */\n  center(index) {\n    return () => {\n      this.rearrange(index);\n    }\n  }\n\n  render() {\n\n    var controllerUnits = [],\n      imgFigures = [];\n\n    imagesURLs.forEach((img, index) => {\n\n      if (!this.state.imgsArrangeArr[index]) {\n        this.state.imgsArrangeArr[index] = {\n          pos: {\n            left: '0',\n            top: '0'\n          },\n          rotate: 0,\n          isInverse: false,\n          isCenter: false\n        }\n      }\n\n      imgFigures.push(<ImgFigure data={img}\n                                 key={index}\n                                 ref={'imgFigure' + index}\n                                arrange={this.state.imgsArrangeArr[index]}\n                                inverse={this.inverse(index)}\n                                center={this.center(index)}\n                      />);\n\n      controllerUnits.push(<ControllerUnit key={index} inverse={this.inverse(index)}\n                                            center={this.center(index)}\n                                           arrange={this.state.imgsArrangeArr[index]}\n                            />);\n    });\n\n    return (\n      <section className = \"stage\" ref={(stage) => { this.stage = stage; }}>\n        <section className = \"img-sec\">\n          {imgFigures}\n        </section>\n        <nav className = \"controller-nav\">\n          {controllerUnits}\n        </nav>\n      </section>\n    );\n  }\n}\n\nAppComponent.defaultProps = {\n};\n\nexport default AppComponent;\n"]}