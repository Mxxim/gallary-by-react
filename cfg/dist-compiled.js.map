{"version":3,"sources":["dist.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,UAAU,QAAQ,SAAR,CAAd;;AAEA,IAAI,aAAa,QAAQ,QAAR,CAAjB;AACA,IAAI,kBAAkB,QAAQ,YAAR,CAAtB;;AAEA;AACA,IAAI,qBAAqB,QAAQ,sBAAR,CAAzB;;AAEA,IAAI,SAAS,OAAO,MAAP,CAAc,EAAd,EAAkB,UAAlB,EAA8B;AACzC,SAAO,KAAK,IAAL,CAAU,SAAV,EAAqB,cAArB,CADkC;AAEzC,SAAO,KAFkC;AAGzC,WAAS,WAHgC;AAIzC,WAAS,CACP,IAAI,QAAQ,QAAR,CAAiB,YAArB,EADO,EAC8B;AACrC,MAAI,QAAQ,YAAZ,CAAyB;AACvB,4BAAwB;AADD,GAAzB,CAFO,EAKP,IAAI,kBAAJ,CAAuB;AACrB,qCAAiC;AADZ,GAAvB,CALO,EAQP,IAAI,QAAQ,QAAR,CAAiB,cAArB,EARO,EAQgC;AACvC,MAAI,QAAQ,QAAR,CAAiB,oBAArB,EATO,EASsC;AAC7C,MAAI,QAAQ,QAAR,CAAiB,uBAArB,EAVO,EAUyC;AAChD,MAAI,QAAQ,cAAZ,EAXO,CAWsB;AAXtB,GAJgC;AAiBzC,UAAQ,gBAAgB,iBAAhB;AAjBiC,CAA9B,CAAb;;AAoBA;AACA,OAAO,MAAP,CAAc,OAAd,CAAsB,IAAtB,CAA2B;AACzB,QAAM,aADmB;AAEzB,UAAQ,OAFiB;AAGzB,WAAS,GAAG,MAAH,CACP,OAAO,eADA,EAEP,CAAE,KAAK,IAAL,CAAU,SAAV,EAAqB,SAArB,CAAF,CAFO;AAHgB,CAA3B;;AASA,OAAO,OAAP,GAAiB,MAAjB","file":"dist-compiled.js","sourcesContent":["'use strict';\n\nlet path = require('path');\nlet webpack = require('webpack');\n\nlet baseConfig = require('./base');\nlet defaultSettings = require('./defaults');\n\n// Add needed plugins here\nlet BowerWebpackPlugin = require('bower-webpack-plugin');\n\nlet config = Object.assign({}, baseConfig, {\n  entry: path.join(__dirname, '../src/index'),\n  cache: false,\n  devtool: 'sourcemap',\n  plugins: [\n    new webpack.optimize.DedupePlugin(), // 检测相似文件，或者文件的冗余内容，然后将冗余内容在output时消除掉\n    new webpack.DefinePlugin({\n      'process.env.NODE_ENV': '\"production\"'\n    }),\n    new BowerWebpackPlugin({\n      searchResolveModulesDirectories: false\n    }),\n    new webpack.optimize.UglifyJsPlugin(), // 压缩输出的js代码\n    new webpack.optimize.OccurenceOrderPlugin(), // 按照引用频率，来定义id，引用越频繁，id越小，来减小文件大小\n    new webpack.optimize.AggressiveMergingPlugin(), // 优化生成的代码段，合并相似的代码段，提取公共部分的\n    new webpack.NoErrorsPlugin() // 保证编译过程中不出错\n  ],\n  module: defaultSettings.getDefaultModules()\n});\n\n// Add needed loaders to the defaults here\nconfig.module.loaders.push({\n  test: /\\.(js|jsx)$/,\n  loader: 'babel',\n  include: [].concat(\n    config.additionalPaths,\n    [ path.join(__dirname, '/../src') ]\n  )\n});\n\nmodule.exports = config;\n"]}